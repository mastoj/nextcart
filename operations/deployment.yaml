apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - patch

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name  }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.member.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.member.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      securityContext:
        {{- toYaml .Values.member.podSecurityContext | nindent 8 }}
      containers:
        - name: member
          securityContext:
            {{- toYaml .Values.member.securityContext | nindent 12 }}
          image: "{{ .Values.member.image.repository }}:{{ .Values.member.image.tag }}"
          imagePullPolicy: {{ .Values.member.image.pullPolicy }}
          env:
            - name: ASPNETCORE_URLS
              value: http://*:5000
            - name: ProtoActor__AdvertisedHost
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
spec:
  type: {{ .Values.member.service.type }}
  ports:
    - port: {{ .Values.member.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: {{ .Release.Name }}
